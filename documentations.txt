INTRODUCTION:
    Angular is an application design framework and development platform for creating efficient and sophisticated single-page apps.
    Prerequisite:
                1. HTML
                2. CSS
                3. JavaScript
                4. tools such as classes and modules
                5. TypeScript (JavaScript with types for dependency injection and using decorators for metadata)
GETTING STARTED:
    What is Angular: Angular is a development platform that inclues-
                                                                    1. A component based framework for building scalable web applications
                                                                    2. A collection of well integrated libraries that cover a wide variety of features, including routing, forms management, client-server communication and more.
                                                                    3. A suite of developer tools to help you develop, build, test and update your code.
                    With Angular, it gives you advantages-
                                                        1. A platform that can scale from single-developer projects to enterprise-level applications
                                                        2. Angular is designed to make updating as straightforward as possible to take advantage of the latest developments with a minimum of effort.
                                                        3. Angular ecosystem consists of a diverse group of over 1.7 million developers, library authors, and content creators.

    The essentials for Angular applications:
                                            Components:             Components are the building blocks that compose an application. A components includes
                                                                                                                                                        - a TypeScript class with a @Component() decorator,
                                                                                                                                                        - an HTML template,
                                                                                                                                                        - and styles.
                                                                    The @Component() decoratior specifies
                                                                                                        - A CSS selector that defines how the components is used in a template. HTML elements in your template that match this selector become instances of the component.
                                                                                                        - An HTML template that instructs Angular how to render the component.
                                                                                                        - An optional set of CSS styles that define the appearance of the template's HTML elements.
                                            Templates:              Every component has an HTML template that declares how that component renders. You define this template either inline or by file path.
                                                                    Angular extends HTML with additional syntax that lets you insert dynamic values from your component. Angular automatically updates the rendered DOM when your component's state changes. One application of this feature is inserting dynamic text such as double-curly-braces. The use of double curly braces is that they instruct Angular to interpolate the contents within them.
                                                                    Angular also supports property bindings, to help you set values for properties and attributes of HTML elements and pass values to your application's presentation logic such as square-brackets. The use of square brackets is that syntax indicates that you are binding the propery or attribute to a value in the component class.
                                                                    Declare event listeners to listen for and respond to user actions such as keystrokes, mouse movements, clicks, and touches. You declare an event listener by specifying the event name in parentheses.
                                                                    Add additional functionality to your templates through the use of directives. The most popular directives in Angular are *ngIf and *ngFor. User directives to perform a variest of tasks, such as dynamically modifying the DOM structure. And create your own custom directives to create great user experiences.
                                            Dependency injection:   Dependency injection lets you declare the dependencies of your TypeScript classes without taking care of their instantiation. Instead, Angular handles the instantiation for you. This design pattern lets you write more testable and flexible code. Even through understanding dependency injection is not critical to start using Angular
    Angular CLI:    The Angular CLI is the fastest, straight forward, and recomened way to develop Angular applications. The Angular CLI makes a number of tasks trouble-free.
                        ng build: compiles an Angular app into an output directory
                        ng server: Builds and serves your application, rebuilding on file changes
                        ng generate: Generate or modifies files based on a schematic
                        ng test: Runs unit tests on a given project
                        ng e2e: Builds and serves an Angular application, then runs end-to-end tests
    First-party libraries:  You can use the Angular platfort to incorporate one of the many first-party libraries that Angular provides. Some of the libraries available to you include-
                                Angular Router: Advanced client-side navigation and routing based on Angular components. Supports lazy-loading, nested routes, custom path matching, and more.
                                Angular Forms: Uniform system for form participation and validation
                                Angular HttpClient: Robust HTTP client that can power more advanced client-server communication
                                Angular Animations: Rich system for driving animations based on application state.
                                Angular PWA: Tools for building Prograssinve Web Applications (PWAs) including a service worker and Web app manifest.
                                Angular Schematics: Automated scaffolding, refactoring, and update tools that simplify development at large scale.
                            These libraries are only reequired if and when they can help you add functionality to your applications or solve a particular problem
    Try it:
            Getting started with Angular: This tutorial introduces you to the essentials of Angular by walking you through building an e-commerce site with a catalog, shopping cart, and check-out form.
            Prerequisite:   
                            1. HTML
                            2. JavaScript
                            3. TypeScript
